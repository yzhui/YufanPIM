<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
             			http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd 
                        http://www.springframework.org/schema/mvc 
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
   	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" /> 
	<beans:bean id="securityManager" class="com.sailmi.mall.core.security.support.SecurityManagerSupport" />
	<beans:bean id="shopAuthenticationProvider" class="com.sailmi.mall.core.security.support.ShopAuthenticationProvider">
		<beans:property name="userDetailsService" ref="securityManager" />
	</beans:bean>
	
	<authentication-manager alias="authenticationManager" >
        <authentication-provider ref="shopAuthenticationProvider"/>  
	</authentication-manager>

	
	
	<http use-expressions="true" entry-point-ref="loginUrlEntryPoint">  
	    <headers>
	        <frame-options policy="SAMEORIGIN"/>
	    </headers>
        <session-management>
            <concurrency-control max-sessions="1"
                error-if-maximum-exceeded="false"  expired-url="/outline.htm"
			session-registry-alias="sessionRegistry" />
        </session-management>
		<!-- max-sessions允许最大登录用户数，exception-if-maximum-exceeded为false时候第二个用户登录踢出第一个，为true拒绝第二个用户登录 -->
        <csrf disabled="true" token-repository-ref="csrfTokenRepository" />
        <intercept-url pattern="/usr/login*" access="permitAll" />  
        <intercept-url pattern="/admin/login*" access="permitAll" />  
        <intercept-url pattern="/login*" access="permitAll" />  
        <intercept-url pattern="/admin/**" access="ADMIN" />  
        <intercept-url pattern="/**" access="ADMIN" />  
        <intercept-url pattern="/**" access="USER" />  
        <intercept-url pattern="/domain_error.htm*" access="permitAll" />  
        <intercept-url pattern="*.css" access="permitAll" />  
        <intercept-url pattern="*.gif" access="permitAll" />  
        <intercept-url pattern="*.jpg" access="permitAll" />  
        <intercept-url pattern="*.jpeg" access="permitAll" />  
        <intercept-url pattern="*.png" access="permitAll" />  
        <intercept-url pattern="*.bmp" access="permitAll" />  
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="resourceSecurityInterceptor"/>
		<custom-filter position="FORM_LOGIN_FILTER" ref="loginAuthenticationFilter"/>
		<custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="exceptionFilter"/>
		<custom-filter before="LOGOUT_FILTER" ref="_logoutProcessingFilter"/>
	</http>
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		 <beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean
					class="org.springframework.security.access.vote.AuthenticatedVoter" />
	        </beans:list>
        </beans:constructor-arg>
		<beans:property name="allowIfAllAbstainDecisions" value="false" />
	</beans:bean>
	
	<beans:bean id="resourceSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager"
			ref="authenticationManager" />
		<beans:property name="accessDecisionManager"
			ref="accessDecisionManager" />
		<!-- 
		<beans:property name="objectDefinitionSource"
			ref="secureResourceFilterInvocationDefinitionSource" />
		-->
		<beans:property name="observeOncePerRequest" value="false" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource"/>  
	</beans:bean>
	<beans:bean id="securityMetadataSource" class="com.sailmi.mall.core.security.interceptor.SecureResourceFilterInvocationDefinitionSource"/>  
	<beans:bean id="secureResourceFilterInvocationDefinitionSource"
		class="com.sailmi.mall.core.security.interceptor.SecureResourceFilterInvocationDefinitionSource" />
	<!-- 自定义登录过滤器 -->
	<beans:bean id="loginAuthenticationFilter"
		class="com.sailmi.mall.core.security.support.LoginAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	    <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"/> <!-- 验证失败时的处理器 -->  
	    <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/> <!-- 验证成果时的处理器 -->  
		<beans:property name="filterProcessesUrl" value="/login.htm" />
 		<beans:property name="usernameParameter" value="username"/> <!-- 表单里用户名字段的name, 默认是j_username -->  
    	<beans:property name="passwordParameter" value="password"/> <!-- 表单里密码字段的name, 默认是j_password -->  
    </beans:bean>
	<beans:bean id="authenticationSuccessHandler" 
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">  
	    <beans:property name="defaultTargetUrl" value="/login_success.htm"/> <!-- 验证成功时跳到哪个请求 -->  
	    <beans:property name="alwaysUseDefaultTargetUrl" value="true"/>  
	</beans:bean>  
  
	<beans:bean id="authenticationFailureHandler" 
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">  
	    <beans:property name="defaultFailureUrl" value="/login_error.htm"/> <!-- 验证失败时跳到哪个请求 -->  
	</beans:bean>  
	<!-- 自定义异常过滤器 -->
	<beans:bean id="exceptionFilter"
		class="com.sailmi.mall.core.security.support.ShopSecurityExceptionFilter">
		<beans:property name="authenticationEntryPoint"	ref="loginUrlEntryPoint" />
	</beans:bean>
	<!-- 重写用户退出过滤器 -->
	<beans:bean id="_logoutProcessingFilter" class="com.sailmi.mall.core.filter.NorLogoutFilter">
		<beans:property name="filterProcessesUrl"
			value="/logout.htm" />
		<beans:constructor-arg value="/logout_success.htm" />
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
					<beans:property name="invalidateHttpSession"
						value="false" />
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
</beans:beans>

